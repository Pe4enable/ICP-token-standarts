service: (principal, record {logo:record {data:text; logo_type:text}; name:text; symbol:text}) -> {
    balanceOf: (principal) -> (nat64) query;
    burn: (nat64) -> (variant {Ok:nat; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}});
    getMetadata: (nat64) -> (variant {Ok:vec record {data:vec nat8; key_val_data:vec record {key:text; val:variant {Nat64Content:nat64; Nat32Content:nat32; Nat8Content:nat8; NatContent:nat; Nat16Content:nat8; BlobContent:vec nat8; TextContent:text}}}; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}}) query;
    getMetadataForUser: (principal) -> (vec vec record {data:vec nat8; key_val_data:vec record {key:text; val:variant {Nat64Content:nat64; Nat32Content:nat32; Nat8Content:nat8; NatContent:nat; Nat16Content:nat8; BlobContent:vec nat8; TextContent:text}}}) query;
    logo: () -> (variant {Ok:record {data:text; logo_type:text}; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}}) query;
    mint: (principal, vec record {data:vec nat8; key_val_data:vec record {key:text; val:variant {Nat64Content:nat64; Nat32Content:nat32; Nat8Content:nat8; NatContent:nat; Nat16Content:nat8; BlobContent:vec nat8; TextContent:text}}}) -> (variant {Ok:record {id:nat; tokenId:nat64}; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}});
    name: () -> (text) query;
    ownerOf: (nat64) -> (variant {Ok:principal; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}}) query;
    safeTransferFrom: (principal, principal, nat) -> (variant {Ok:nat; Err:variant {ZeroAddress:text; InvalidTokenId:text; Unauthorized:text; Other:text}});
    symbol: () -> (text) query;
    totalSupply: () -> (nat64) query;
}